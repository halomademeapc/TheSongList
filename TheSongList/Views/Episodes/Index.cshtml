@model IEnumerable<SumPair<Episode>>

@{
    ViewData["Title"] = "Index";
    var maxSongs = Model.Max(p => p.Count);
    float getPercentage(SumPair<Episode> i) => maxSongs > 0 ? (float)i.Count * 100 / maxSongs : 0;

    var seasons = Model.Select(p => p.Item.Season).Distinct();
}

<div class="d-flex justify-content-between align-items-center">
    <h2>Episodes</h2>
    <a class="btn btn-outline-primary my-3" asp-action="Create">
        <i class="fas fa-plus mr-2"></i>
        Create New
    </a>
</div>

@foreach (var s in seasons)
{
    <h5 class="mt-4 mb-2">Season @s.Name</h5>
    <div class="list-group">
        @foreach (var e in Model.Where(p => p.Item.Season == s))
        {
            <a asp-action="Details" asp-route-id="@e.Item.Id" class="list-group-item list-group-item-action position-relative">
                <small class="text-muted">
                    <span>S@(e.Item.Season.Name)</span>
                    <span>E@(e.Item.EpisodeNumber)</span>
                </small>
                <span class="ml-2">
                    @Html.DisplayFor(modelItem => e.Item.Name)
                    <span class="badge badge-pill badge-primary ml-1">@Html.DisplayFor(modelItem => e.Count)</span>
                </span>
                <span class="position-absolute h-100 bg-primary opacity-10 corner-tl animate-grow-x" style="width: @getPercentage(e)%"></span>
            </a>
        }
    </div>
}