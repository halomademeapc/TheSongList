// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TheSongList.Services;

namespace TheSongList.Migrations
{
    [DbContext(typeof(SongContext))]
    [Migration("20190130233857_episodeDetail")]
    partial class episodeDetail
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028");

            modelBuilder.Entity("TheSongList.Models.Entities.Appearance", b =>
                {
                    b.Property<int>("EpisodeId");

                    b.Property<int>("SongId");

                    b.HasKey("EpisodeId", "SongId");

                    b.HasIndex("SongId");

                    b.ToTable("Appearances");
                });

            modelBuilder.Entity("TheSongList.Models.Entities.Artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Artists");
                });

            modelBuilder.Entity("TheSongList.Models.Entities.Episode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AirDate");

                    b.Property<string>("Director");

                    b.Property<int>("EpisodeNumber");

                    b.Property<string>("Name");

                    b.Property<string>("ProdCode");

                    b.Property<int>("SeasonId");

                    b.Property<string>("Writer");

                    b.HasKey("Id");

                    b.HasIndex("SeasonId");

                    b.ToTable("Episodes");
                });

            modelBuilder.Entity("TheSongList.Models.Entities.Era", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Color");

                    b.Property<string>("Label")
                        .IsRequired();

                    b.Property<int>("SortOrder");

                    b.HasKey("Id");

                    b.ToTable("Eras");
                });

            modelBuilder.Entity("TheSongList.Models.Entities.Season", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AirTime");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("SortOrder");

                    b.HasKey("Id");

                    b.ToTable("Seasons");
                });

            modelBuilder.Entity("TheSongList.Models.Entities.Song", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ArtistId");

                    b.Property<int?>("EraId");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("ArtistId");

                    b.HasIndex("EraId");

                    b.ToTable("Songs");
                });

            modelBuilder.Entity("TheSongList.Models.Entities.Appearance", b =>
                {
                    b.HasOne("TheSongList.Models.Entities.Episode", "Episode")
                        .WithMany("Appearances")
                        .HasForeignKey("EpisodeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TheSongList.Models.Entities.Song", "Song")
                        .WithMany()
                        .HasForeignKey("SongId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TheSongList.Models.Entities.Episode", b =>
                {
                    b.HasOne("TheSongList.Models.Entities.Season", "Season")
                        .WithMany("Episodes")
                        .HasForeignKey("SeasonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TheSongList.Models.Entities.Song", b =>
                {
                    b.HasOne("TheSongList.Models.Entities.Artist", "Artist")
                        .WithMany("Songs")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TheSongList.Models.Entities.Era", "Era")
                        .WithMany("Songs")
                        .HasForeignKey("EraId");
                });
#pragma warning restore 612, 618
        }
    }
}
